plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

ext {
    asciidocVersion = "3.0.0"
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //vallidation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto 메이븐프로젝트 홈페이지에서 spring security cripto 6.0.1버전
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.0.1'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.70'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    //Restdocs
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

    //캐싱
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'

    compileOnly 'org.projectlombok:lombok'
    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    //test용 h2
    runtimeOnly 'com.h2database:h2'


    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

/*
test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}
bootJar {
    dependsOn asciidoctor
    copy {
        from asciidoctor.outputDir          //여기를 복사해서
        into "src/main/resources/static/docs"  //여기로 넣어라
    }
}*/

